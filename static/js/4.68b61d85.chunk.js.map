{"version":3,"sources":["components/LearningCenterContent/LearningCenterStacks/ChooseStack/ChooseStack.js","components/LearningCenterContent/LearningCenterStacks/LearningCenterStacks.js","components/LearningCenterContent/LearningCenterLaunchButtons/LearningCenterLaunchButton/LearningCenterLaunchButton.js","components/LearningCenterContent/LearningCenterLaunchButtons/LearningCenterLaunchButtons.js","components/LearningCenterContent/LearningCenterContent.js","components/Flashcards/Flashcard/FlashcardFront/FlashcardFront.js","components/Flashcards/Flashcard/FlashcardBack/FlashcardBack.js","components/Flashcards/Flashcard/Flashcard.js","components/Flashcards/FlashcardControls/FlashcardControls.js","components/Flashcards/Flashcards.js","components/LearningCenterContent/StackManager/StackSearch/StackSearch.js","containers/Stack/Stack.js","containers/LearningCenter/LearningCenter.js"],"names":["Wrapper","styled","div","theme","fonts","script","ListOptions","ListSelect","Select","chooseList","props","className","hidden","learningCenterStacks","ChooseStack","Button","palette","grayscale","disabled","secondary","learningCenterLaunchButton","media","tabletLandscape","learningCenterLaunchButtons","LearningCenterLaunchButton","listReady","clicked","launchFlashcards","learningCenterContent","LearningCenterStacks","LearningCenterLaunchButtons","CardFace","Name","flashcardFront","reveal","name","toLowerCase","Bullet","Bullets","FlashCardBackHeader","FlashcardBackSpecialClass","FlashcardBackInstructions","flashcardBack","elements","measurements","garnishes","glassware","cocktailGarnish","cocktailGlassware","cocktailInstructions","console","log","cocktailMeasurements","map","measurement","i","key","length","join","instructions","instruction","Flashcard","state","clickRevealHandler","setState","prevState","classifyElementsHandler","Object","keys","sort","a","b","order","forEach","element","elementStr","label","qty","qtyFloatToString","qtyType","toUpperCase","class","push","this","cocktail","elementsByClass","onClick","FlashcardFront","FlashcardBack","Component","transparent","SpriteContainer","flashcardControls","height","spriteName","buttonSymbol","SlideshowFeature","index","Flashcards","cocktails","stack","flashcards","flashcardArray","pool","id","featureFlashcard","flashcardsIndex","FlashcardControls","incrementFlashcardIndex","connect","learning","dispatch","actions","primary","SearchBar","StackSearch","StackItemLists","StackListView","StackListViewItem","selected","ListEditor","ListEditorItems","ListEditorCheckout","listItemProps","Stack","listCocktails","editListItems","stackManagerInit","stackManagerItems","manager","item","listItemClickedSelected","listEditorItemsInit","itemIDs","updatedEditListItems","updatedListCocktails","updateObject","checkoutButtonHandler","adding","onAddToStack","onRemoveFromStack","viewerClosed","newListItem","stackListViewItem","listEditorItems","LearningCenter","modalContent","count","inFlashcards","modalOpen","loading","Fragment","Modal","show","modalClosed","LearningCenterContent","startFlashcards","onInitCocktails"],"mappings":"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","file":"static/js/4.68b61d85.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Select } from '../../../UI'\n\nconst Wrapper = styled.div`\n    height: 100%;\n    justify-content: space-evenly;\n\n    h3 {\n        font-size: 3rem;\n        font-family: ${({ theme }) => theme.fonts.script};\n    }\n`\n\nconst ListOptions = styled.div`\n    width: 100%;\n    margin: 1rem 0;\n`\n\nconst ListSelect = styled(Select)`\n    width: 25rem;\n    border: 2px solid black;\n    font-size: 1.6rem;\n    font-weight: bold;\n    text-align: center;\n    text-align-last: center;\n    text-transform: uppercase;\n    border-radius: 0;\n\n    option {\n        text-align: center;\n    text-align-last: center;\n    }\n\n    :not(:first-child) {\n        margin-top: 2rem;\n    }\n`\n\nconst chooseList = props => {\n  return (\n    <Wrapper\n        className='stacks--choose-list'\n        >\n        <h3>\n        Choose a List:\n        </h3>\n        <ListOptions>\n            <form>\n                <ListSelect>\n                    <option hidden>Select List Source</option>\n                </ListSelect>\n                <ListSelect>\n                    <option hidden>Select List</option>\n                </ListSelect>\n            </form>\n        </ListOptions>\n    </Wrapper>\n  )\n}\n\nexport default chooseList\n","import React from 'react'\nimport styled from 'styled-components'\nimport ChooseStack from './ChooseStack/ChooseStack'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    min-height: 20rem;\n    padding: 1rem 0;\n    justify-content: center;\n`\n\nconst learningCenterStacks = props => {\n  return (\n    <Wrapper\n        className='learning-center--stacks'\n        >\n        <ChooseStack />\n    </Wrapper>\n  )\n}\n\nexport default learningCenterStacks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../../UI'\n\nconst Wrapper = styled(Button)`\n    width: 20rem;\n    height: 5rem;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 1.6rem;\n    border: 2px outset ${({ theme }) => theme.palette.grayscale[4]};\n\n    background-image: ${props => props.disabled \n        ? props.theme.palette.disabled\n        : 'none'};\n\n    :hover {\n        background-color: ${props => props.disabled\n            ? 'inherit'\n            : props.theme.palette.secondary[3]\n        };\n    }\n`\n\nconst learningCenterLaunchButton = props => {\n    return (\n        <Wrapper\n            className='learning-center--launch-buttons__button'\n            {...props}\n            >\n        </Wrapper>\n    )\n}\n\nexport default learningCenterLaunchButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport LearningCenterLaunchButton from './LearningCenterLaunchButton/LearningCenterLaunchButton'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: 30vh;\n    margin-top: 1rem;\n    justify-content: space-evenly;\n\n    @media (min-width: ${({ theme }) => theme.media.tabletLandscape}) {\n        width: 60rem;\n        height: 10rem;\n        flex-flow: row;\n    }\n`\n\nconst learningCenterLaunchButtons = props => {\n    return (\n        <Wrapper\n            className='learning-center--launch-buttons'\n            >\n            <LearningCenterLaunchButton\n                disabled={!props.listReady}\n                clicked={props.launchFlashcards}\n                >\n                View Flashcards\n            </LearningCenterLaunchButton>\n            <LearningCenterLaunchButton\n                disabled\n                // disabled={props.count < 1}\n                >\n                Take Quiz\n            </LearningCenterLaunchButton>\n        </Wrapper>\n    )\n}\n\nexport default learningCenterLaunchButtons\n","import React from 'react'\nimport LearningCenterStacks from './LearningCenterStacks/LearningCenterStacks'\nimport LearningCenterLaunchButtons from './LearningCenterLaunchButtons/LearningCenterLaunchButtons'\nimport { ContentBlock, Header } from '../UI'\n\nconst learningCenterContent = props => {\n  return (\n    <ContentBlock\n      className={'learning-center--content'}\n      >\n        <Header\n            className='learning-center--header'\n            >\n            Cocktail Learning Center\n        </Header>\n        <LearningCenterStacks\n            className='learning-center--stacks'\n            launchFlashcards={props.launchFlashcards}\n            />\n        <LearningCenterLaunchButtons\n            className='learning-center--launch-buttons'\n            launchFlashcards={props.launchFlashcards}\n            />\n    </ContentBlock>\n  )\n}\n\nexport default learningCenterContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardFace from '../../../UI/CardFace/CardFace'\n\nconst Wrapper = styled(CardFace)`\n    height: 100%;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Name = styled.div`\n    width: 100%;\n    padding: 2rem;\n    font-size: 4.8rem;\n    text-align: center;\n    text-transform: capitalize;\n\n\n`\n\nconst flashcardFront = props => {\n    return (\n        <Wrapper \n            className='flashcard-front'\n            reveal={props.reveal} >\n            <Name>{props.name.toLowerCase()}</Name>\n        </Wrapper>\n    )\n}\n\nexport default flashcardFront\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardFace from '../../../UI/CardFace/CardFace'\n\nconst Wrapper = styled(CardFace)`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    /* justify-content: center; */\n    padding: 1rem 2rem;\n\n    /* > div {\n        width: 100%;\n    } */\n\n    .cardText {\n        display: flex;\n        justify-content: flex-start;\n    }\n\n    > :not(:first-child) {\n        font-size: 1.4rem;\n    }\n`\n\nconst Bullet = styled.div`\n    height: 2.4rem;\n    margin-top: 2px;\n    padding-top: 1.1rem;\n    \n    text-align: left;\n    \n    align-items: flex-start;\n    `\n\nconst Bullets = styled.div`\n    width: 100%;\n    flex: 1;\n    margin-top: 2.1rem;\n    column-count: 2;\n    column-fill: auto;\n    column-gap: 3.5rem;\n`\n\nconst FlashCardBackHeader = styled.div`\n    height: 4.4rem;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-end;\n    font-size: 2.4rem;\n    text-transform: capitalize;\n`\n\nconst FlashcardBackSpecialClass = styled.div`\npadding-top: 1rem;\nheight: 2.6rem;\n`\n\nconst FlashcardBackInstructions = styled.div`\npadding-top: 1rem;\n    height: 5.2rem;\n`\n\nconst flashcardBack = props => {\n    const { elements } = props\n    const { measurements, garnishes, glassware } = elements\n    let cocktailGarnish = null\n    let cocktailGlassware= null\n    let cocktailInstructions = null\n\n    console.log('[FlashcardBack] props: ', props)\n    const cocktailMeasurements = measurements.map((measurement, i) => {\n        return (\n            <Bullet className=\"bullet cardText\" key={measurement + i}>\n                • {measurement}\n            </Bullet>\n        )\n    })\n    if (garnishes.length > 0) {\n        cocktailGarnish = (\n            <FlashcardBackSpecialClass\n                className='flashcardBackSpecialClass--garnishes'\n                >\n                    Garnish: {garnishes.join(' and/or ')}\n            </FlashcardBackSpecialClass>\n        )\n    }\n    if (glassware.length > 0) {\n        cocktailGlassware = (\n            <FlashcardBackSpecialClass\n                className='flashcardBackSpecialClass--glassware'\n                >\n                    Glassware: {glassware.join(' or ')}\n            </FlashcardBackSpecialClass>\n        )\n    }\n    if (props.instructions) {\n        cocktailInstructions = (\n            <FlashcardBackInstructions>\n                Instructions: {props.instructions.instruction}\n            </FlashcardBackInstructions>)\n    }\n    \n\n    return (\n        <Wrapper\n            className='flashcard-back'\n            reveal={props.reveal} >\n            <FlashCardBackHeader className=\"cardHeader cardText\">{props.name.toLowerCase()}</FlashCardBackHeader>\n            <Bullets>\n                {cocktailMeasurements}\n            </Bullets>\n            {/* {cocktailGarnish}\n            {cocktailGlassware}\n            {cocktailInstructions} */}\n            {cocktailGarnish}\n            {cocktailGlassware}\n            {cocktailInstructions}\n        </Wrapper>\n    )\n}\n\nexport default flashcardBack\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport FlashcardFront from './FlashcardFront/FlashcardFront'\nimport FlashcardBack from './FlashcardBack/FlashcardBack'\nimport { qtyFloatToString, makePlural } from '../../../shared/stringUtility'\n\n\n\nconst Wrapper = styled.div`\n    width: 75rem;;\n    height: 40rem;\n    display: block;\n\n    position: relative;\n    box-sizing: border-box;\n    perspective: 150rem;\n    -moz-perspective: 150rem;\n    /* height: 52rem; */\n\n\n`\n\nclass Flashcard extends Component {\n    state = {\n        reveal: false\n    }\n\n    clickRevealHandler = () => {\n        this.setState(prevState => {\n            return {reveal: !prevState.reveal}\n        })\n    }\n\n    classifyElementsHandler = elements => {\n        const measurements = []\n        const garnishes = []\n        const glassware = []\n        const elementKeys = Object.keys(elements).sort((a, b) => elements[a].order > elements[b].order ? 1 : -1)\n        \n        elementKeys.forEach(key => {\n            const element = elements[key]\n            let elementStr = element.label\n            if (element.qty){\n                let qty = qtyFloatToString(element.qty)\n                if (element.qtyType === 'count') {\n                    elementStr = qty + 'x ' + element.label.toUpperCase()\n                } else {\n                    elementStr = qty + ' ' + element.qtyType.toLowerCase() + ' ' + element.label.toUpperCase()\n                }\n            }\n            if (element.class === 'garnish') {\n                garnishes.push(elementStr)\n            } else if (element.class === 'glassware') {\n                glassware.push(elementStr.toUpperCase())\n            } else {\n                measurements.push(elementStr)\n            }\n        })\n        return ({\n            measurements,\n            garnishes,\n            glassware\n        })\n    }\n\n    render() {\n        const { name, elements, instructions } = this.props.cocktail\n        const elementsByClass = this.classifyElementsHandler(elements) \n\n        return (\n            <Wrapper\n                className='flashcard'\n                onClick={this.clickRevealHandler}>\n                <FlashcardFront\n                    className='flashcard-front'\n                    reveal={!this.state.reveal}\n                    name={name}\n                    />\n                <FlashcardBack\n                    className='flashcard-back'\n                    reveal={this.state.reveal}\n                    name={name}\n                    elements={elementsByClass}\n                    instructions={instructions}\n                    >\n                </FlashcardBack>\n            </Wrapper>\n        )\n    }\n}\n\nexport default Flashcard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Sprite } from '../../UI'\n\nconst Wrapper = styled.div`\n    height: 100%;\n    width: 10rem;\n    padding: 2rem 1rem;\n    max-width: 10%;\n    background-color: ${props => props.theme.palette.transparent[0]};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst SpriteContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    :hover {\n        background-color: white;\n    }\n`\n\nconst flashcardControls = props => {\n  return (\n    <Wrapper\n        className={props.className}\n        onClick={props.clicked}\n        >\n        <SpriteContainer>\n            <Sprite \n                className='flashcard--control__sprite'\n                height='15rem'\n                spriteName={props.buttonSymbol}\n                />\n        </SpriteContainer>\n    </Wrapper>\n  )\n}\n\nexport default flashcardControls\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport Flashcard from './Flashcard/Flashcard'\nimport FlashcardControls from './FlashcardControls/FlashcardControls'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: 50rem;\n    max-height: 100%;\n    /* z-index: 500; */\n    top: 50%;\n    left: 0%;\n    transform: translateY(-50%);\n    display: flex;\n`\n\nconst SlideshowFeature = styled.div`\n    flex: 1;\n    height: 100%;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n\n    /* > * {\n        transform: ${props => `translateX(calc(-100% * ${props.index}))`};\n    } */\n    /* background-color: orange; */\n`\n\nclass Flashcards extends Component {\n\n    render() {\n        const { cocktails, stack, flashcards } = this.props\n        const flashcardArray = []\n\n        stack.pool.forEach(id => {\n            flashcardArray.push(\n                <Flashcard\n                    key={id}\n                    cocktail={cocktails[id]}\n                    />\n            )\n        })\n        const featureFlashcard = flashcardArray[flashcards.flashcardsIndex]\n\n        return (\n            <Wrapper\n                className='slideshow'\n                >\n                <FlashcardControls\n                    className='slideshow--control-back'\n                    buttonSymbol='chevron-left'\n                    clicked={() => this.props.incrementFlashcardIndex(-1)}\n                    />\n                <SlideshowFeature>\n                    {featureFlashcard}\n                </SlideshowFeature>\n                <FlashcardControls\n                    className='slideshow--control-forward'\n                    buttonSymbol='chevron-right'\n                    clicked={() => this.props.incrementFlashcardIndex(1)}\n                    />\n            </Wrapper>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cocktails: state.cocktails.cocktails,\n        stack: state.learning.stack,\n        flashcards: state.learning.flashcards\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        incrementFlashcardIndex: i => dispatch(actions.incrementFlashcardIndex(i))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Flashcards)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: 15vh;\n    min-height: 5rem;\n    background-color: ${props => props.theme.palette.primary[2]};;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst SearchBar = styled.div`\n    flex: 0 0 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    > input {\n        font-family: inherit;\n        font-size: inherit;\n        color: inherit;\n        border: none;\n        padding: .7rem 2rem;\n        border-radius: 100px;\n        width: 90%;\n        height: 3rem;\n        transition: all .2s;\n        background-color: ${props => props.theme.palette.grayscale[5]};\n\n        &:focus {\n            outline: none;\n            width: 100%;\n            height: q                                                               3.6rem;\n        }\n    }\n`\n\nconst StackSearch = props => {\n    return (\n        <Wrapper\n            className='stack-search'>\n            <SearchBar>\n                <input />\n            </SearchBar>\n        </Wrapper>\n    )\n}\n\nexport default StackSearch\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport StackSearch from '../../components/LearningCenterContent/StackManager/StackSearch/StackSearch'\nimport * as actions from '../../store/actions'\nimport { updateObject } from '../../shared/objectUtility'\n\nconst Wrapper = styled.div`\n  width: 100rem;\n  height: 90vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-flow: column;\n\n  opacity: .9;\n  border: 3px outset white;\n  padding: 2px;\n`\n\nconst StackItemLists = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n`\n\nconst StackListView = styled.div`\n  width: 70rem;\n  background-color: ${props => props.theme.palette.grayscale[4]};;\n  overflow: hidden;\n`\n\nconst StackListViewItem = styled.div`\n  width: 10rem;\n  height: 4rem;\n  background-color: ${props => props.selected ? 'red' : 'inherit'};\n`\n\nconst ListEditor = styled.div`\n  flex: 1;\n  display: flex;\n  flex-flow: column;\n`\n\nconst ListEditorItems = styled.div`\n  width: 100%;\n  flex: 1;\n  background-color: purple;\n\n`\n\nconst ListEditorCheckout = styled.div`\n  width: 100%;\n  height: 8rem;\n  background-color: orangered;\n`\n\nconst listItemProps = {\n  name: '',\n  selected: false\n}\n\nclass Stack extends Component {\n  state = {\n    listCocktails: {},\n    editListItems: {}\n  }\n\n  componentDidMount() {\n    const { stack, cocktails } = this.props\n    let listCocktails = { ...this.state.listCocktails }\n    if (stack) {\n      if (stack.manager) {\n        stack.pool.forEach(id => {\n          let newListItem = { ...listItemProps }\n          listCocktails = updateObject(listCocktails, {\n            [id]: updateObject(newListItem, {\n              name: cocktails[id].name,\n            })\n          })\n        })\n      }\n    }\n    this.setState({ listCocktails })\n  }\n\n  stackManagerInit = () => {\n    const { listCocktails } = this.state\n    let stackManagerItems = null\n\n    if (this.props.stack.manager) {\n      stackManagerItems = Object.keys(listCocktails).map(id => {\n        const item = listCocktails[id]\n        return (\n          <StackListViewItem\n            key={id}\n            selected={item.selected}\n            onClick={() => this.listItemClickedSelected(id)}\n            >\n            {item.name}\n          </StackListViewItem> \n        )\n      })\n    }\n    return stackManagerItems\n  }\n\n  listEditorItemsInit = () => {\n    const { editListItems } = this.state\n    console.log('[Stack] editListItems: ', editListItems)\n\n    const itemIDs = Object.keys(editListItems)\n\n    return itemIDs.length > 0 \n      ? itemIDs.map(id => {\n        const item = editListItems[id]\n        return (\n          <StackListViewItem\n            key={id}\n            onClick={() => this.listItemClickedSelected(id)}\n            >\n            {item.name}\n          </StackListViewItem> \n        )\n      })\n      : null\n  }\n\n  listItemClickedSelected = id => {\n    let updatedEditListItems = { ...this.state.editListItems }\n    let updatedListCocktails = { ...this.state.listCocktails }\n\n    updatedListCocktails = updateObject(updatedListCocktails, {\n      [id]: updateObject(updatedListCocktails[id], {\n        selected: !updatedListCocktails[id].selected\n      })\n    })\n\n    updatedEditListItems = { ...updatedListCocktails }\n\n    for (let id in updatedEditListItems) {\n      if (!updatedEditListItems[id].selected) {\n        delete updatedEditListItems[id]\n      }\n    }\n\n    this.setState({\n      listCocktails: updatedListCocktails,\n      editListItems: updatedEditListItems\n    })\n\n  }\n\n  checkoutButtonHandler = () => {\n    const { adding, editListItems } = this.state\n    const stackEditFunction = adding ? this.props.onAddToStack : this.props.onRemoveFromStack\n    const iDArray = Object.keys(editListItems)\n\n    stackEditFunction(iDArray)\n    this.props.viewerClosed()\n  }\n\n  render() {\n    const { stack, cocktails } = this.props\n    let stackListViewItem = this.stackManagerInit()\n    let listEditorItems = this.listEditorItemsInit()\n\n    // console.log('[Stack] this.state: ', this.state)\n    console.log('[Stack] listEditorItems: ', listEditorItems)\n    return(\n      <Wrapper>\n        <StackSearch />\n        <StackItemLists>\n          <StackListView>\n            {stackListViewItem}\n          </StackListView>\n          <ListEditor>\n            <ListEditorItems>\n              {listEditorItems}\n            </ListEditorItems>\n            <ListEditorCheckout \n              onClick={() => this.checkoutButtonHandler()}\n              />\n          </ListEditor>\n        </StackItemLists>\n      </Wrapper>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stack: state.learning.stack,\n    cocktails: state.cocktails.cocktails,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddToStack: pool => dispatch(actions.addToStack(pool)),\n    onRemoveFromStack: pool => dispatch(actions.removeFromStack(pool)),\n    viewerClosed: () => dispatch(actions.viewerClosed())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stack)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions'\nimport LearningCenterContent from '../../components/LearningCenterContent/LearningCenterContent'\nimport Flashcards from '../../components/Flashcards/Flashcards'\nimport Stack from '../Stack/Stack'\n\nimport Modal from '../../components/UI/Modal/Modal'\n\nclass LearningCenter extends Component {\n    state = {\n    }\n\n    render() {\n        let modalContent = null\n        const { manager, pool, count } = this.props.stack\n        const { inFlashcards } = this.props.flashcards\n        const modalOpen = inFlashcards || manager\n\n        console.log('[LearningCenter] manager: ', manager)\n        console.log('[LearningCenter] modalOpen: ', modalOpen)\n\n        if (!this.props.loading) {\n            if (inFlashcards) modalContent = <Flashcards />\n            if (manager) modalContent = <Stack />\n        } \n        return (\n            <React.Fragment>\n                <Modal\n                    show={modalOpen}\n                    modalClosed={this.props.viewerClosed}\n                    >\n                    {modalContent}\n                </Modal>\n                <LearningCenterContent \n                    count={count}\n                    launchFlashcards={this.props.startFlashcards}\n                    />\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        stack: state.learning.stack,\n        flashcards: state.learning.flashcards,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitCocktails: () => dispatch(actions.fetchCocktails()),\n        startFlashcards: () => dispatch(actions.startFlashcards()),\n        viewerClosed: () => dispatch(actions.viewerClosed()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LearningCenter)\n"],"sourceRoot":""}